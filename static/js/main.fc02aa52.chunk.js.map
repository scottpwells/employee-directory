{"version":3,"sources":["containers/Table/Table.jsx","App.js","reportWebVitals.js","index.js"],"names":["Table","useState","employees","setEmployees","employeesToDisplay","setEmployeesToDisplay","sortDirection","setSortDirection","searchTerm","setSearchTerm","useEffect","axios","get","then","response","console","log","data","results","sortByNameAsc","sortedEmployees","sort","a","b","aValue","name","first","bValue","sortByNameDesc","onSubmit","e","preventDefault","filteredEmployees","filter","employee","phone","includes","type","placeholder","value","onChange","target","className","onClick","scope","map","index","id","src","picture","thumbnail","alt","last","email","dob","date","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iNAqIeA,EAlID,WAAO,IAAD,EACgBC,mBAAS,IADzB,mBACXC,EADW,KACAC,EADA,OAEkCF,mBAAS,IAF3C,mBAEXG,EAFW,KAESC,EAFT,OAGwBJ,mBAAS,OAHjC,mBAGXK,EAHW,KAGIC,EAHJ,OAIkBN,mBAAS,IAJ3B,mBAIXO,EAJW,KAICC,EAJD,KAMlBC,qBAAU,WACRC,IAAMC,IAAI,yCAAyCC,MAAK,SAACC,GACvDC,QAAQC,IAAIF,EAASG,MACrBZ,EAAsBS,EAASG,KAAKC,SACpCf,EAAaW,EAASG,KAAKC,cAE5B,IAEH,IAuBMC,EAAgB,WACpB,IACMC,EADa,YAAOlB,GACYmB,MAAK,SAACC,EAAGC,GAC7C,IAAMC,EAASF,EAAEG,KAAKC,MAChBC,EAASJ,EAAEE,KAAKC,MACtB,OAAIF,EAASG,GACH,EAENH,EAASG,EACJ,EAEF,KAETZ,QAAQC,IAAII,GACZf,EAAsBe,IAGlBQ,EAAiB,WACrB,IACMR,EADa,YAAOlB,GACYmB,MAAK,SAACC,EAAGC,GAC7C,IAAMC,EAASF,EAAEG,KAAKC,MAChBC,EAASJ,EAAEE,KAAKC,MACtB,OAAIF,EAASG,GACH,EAENH,EAASG,EACJ,EAEF,KAETZ,QAAQC,IAAII,GACZf,EAAsBe,IAGxB,OACE,gCACE,8BACE,uBAAMS,SA5DS,SAACC,GACpBA,EAAEC,iBACF,IAAMC,EAAoB9B,EAAU+B,QAAO,SAACC,GAC1C,OAAOA,EAASC,MAAMC,SAAS5B,MAGjCH,EAAsB2B,IAsDlB,UACE,uBACEK,KAAK,OACLC,YAAY,+BACZb,KAAK,aACLc,MAAO/B,EACPgC,SAAU,SAACV,GACTrB,EAAcqB,EAAEW,OAAOF,UAG3B,wBAAQG,UAAU,kBAAlB,oBACA,wBACEA,UAAU,oBACVC,QAhEU,WAClBtC,EAAsBH,IAgEdmC,KAAK,SAHP,wBASJ,8BACE,wBAAOK,UAAU,sBAAjB,UACE,gCACE,+BACE,oBAAIE,MAAM,MAAV,gBACA,oBAAIA,MAAM,MAAV,mBACA,oBAAIA,MAAM,MAAMD,QAzET,WACK,QAAlBrC,GACFa,IACAZ,EAAiB,UAEjBqB,IACArB,EAAiB,SAmET,kBAGA,oBAAIqC,MAAM,MAAV,mBACA,oBAAIA,MAAM,MAAV,mBACA,oBAAIA,MAAM,MAAV,sBAGJ,gCACGxC,EAAmByC,KAAI,SAACX,EAAUY,GAAX,OACtB,+BACE,oBAAIF,MAAM,MAAV,SAAiBV,EAASa,GAAGR,QAC7B,6BACE,qBAAKS,IAAKd,EAASe,QAAQC,UAAWC,IAAKjB,EAAST,KAAKC,UAE3D,+BACGQ,EAAST,KAAKC,MADjB,IACyBQ,EAAST,KAAK2B,QAEvC,6BAAKlB,EAASmB,QACd,6BAAKnB,EAASC,QACd,6BAAKD,EAASoB,IAAIC,SAVXT,iBCtGRU,MARf,WACE,OACE,qBAAKd,UAAU,MAAf,SACE,cAAC,EAAD,OCMSe,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB9C,MAAK,YAAkD,IAA/C+C,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCFdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.fc02aa52.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst Table = () => {\r\n  const [employees, setEmployees] = useState([]);\r\n  const [employeesToDisplay, setEmployeesToDisplay] = useState([]);\r\n  const [sortDirection, setSortDirection] = useState(\"asc\");\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    axios.get(\"https://randomuser.me/api/?results=50\").then((response) => {\r\n      console.log(response.data);\r\n      setEmployeesToDisplay(response.data.results);\r\n      setEmployees(response.data.results);\r\n    });\r\n  }, []);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const filteredEmployees = employees.filter((employee) => {\r\n      return employee.phone.includes(searchTerm);\r\n    });\r\n\r\n    setEmployeesToDisplay(filteredEmployees);\r\n  };\r\n\r\n  const handleReset = () => {\r\n    setEmployeesToDisplay(employees);\r\n  };\r\n\r\n  const sortByName = () => {\r\n    if (sortDirection === \"asc\") {\r\n      sortByNameAsc();\r\n      setSortDirection(\"desc\");\r\n    } else {\r\n      sortByNameDesc();\r\n      setSortDirection(\"asc\");\r\n    }\r\n  };\r\n\r\n  const sortByNameAsc = () => {\r\n    const tempEmployees = [...employees];\r\n    const sortedEmployees = tempEmployees.sort((a, b) => {\r\n      const aValue = a.name.first;\r\n      const bValue = b.name.first;\r\n      if (aValue < bValue) {\r\n        return -1;\r\n      }\r\n      if (aValue > bValue) {\r\n        return 1;\r\n      }\r\n      return 0;\r\n    });\r\n    console.log(sortedEmployees);\r\n    setEmployeesToDisplay(sortedEmployees);\r\n  };\r\n\r\n  const sortByNameDesc = () => {\r\n    const tempEmployees = [...employees];\r\n    const sortedEmployees = tempEmployees.sort((a, b) => {\r\n      const aValue = a.name.first;\r\n      const bValue = b.name.first;\r\n      if (aValue > bValue) {\r\n        return -1;\r\n      }\r\n      if (aValue < bValue) {\r\n        return 1;\r\n      }\r\n      return 0;\r\n    });\r\n    console.log(sortedEmployees);\r\n    setEmployeesToDisplay(sortedEmployees);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <form onSubmit={handleSubmit}>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Enter phone number to filter\"\r\n            name=\"searchTerm\"\r\n            value={searchTerm}\r\n            onChange={(e) => {\r\n              setSearchTerm(e.target.value);\r\n            }}\r\n          ></input>\r\n          <button className=\"btn btn-primary\">Search</button>\r\n          <button\r\n            className=\"btn btn-secondary\"\r\n            onClick={handleReset}\r\n            type=\"button\"\r\n          >\r\n            Reset\r\n          </button>\r\n        </form>\r\n      </div>\r\n      <div>\r\n        <table className=\"table table-striped\">\r\n          <thead>\r\n            <tr>\r\n              <th scope=\"col\">ID</th>\r\n              <th scope=\"col\">Photo</th>\r\n              <th scope=\"col\" onClick={sortByName}>\r\n                Name\r\n              </th>\r\n              <th scope=\"col\">Email</th>\r\n              <th scope=\"col\">Phone</th>\r\n              <th scope=\"col\">DOB</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {employeesToDisplay.map((employee, index) => (\r\n              <tr key={index}>\r\n                <th scope=\"row\">{employee.id.value}</th>\r\n                <td>\r\n                  <img src={employee.picture.thumbnail} alt={employee.name.first}></img>\r\n                </td>\r\n                <td>\r\n                  {employee.name.first} {employee.name.last}\r\n                </td>\r\n                <td>{employee.email}</td>\r\n                <td>{employee.phone}</td>\r\n                <td>{employee.dob.date}</td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Table;","import Home from \"./containers/Table/Table\";\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Home />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}